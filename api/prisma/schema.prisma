generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Document {
  docId       String       @id @default(cuid())
  type        String
  jobNumber   String
  content     String
  contentHash String
  mimeType    String       @default("application/pdf")
  uploadedAt  DateTime     @default(now())
  extractions Extraction[]
  jobResumes  JobResume[]
}

model Extraction {
  extractionId   String   @id @default(cuid())
  docId          String
  idpRequestId   String?
  extractionJson String?
  status         String   @default("PENDING")
  createdAt      DateTime @default(now())
  document       Document @relation(fields: [docId], references: [docId], onDelete: Cascade)
}

model Role {
  roleId         String   @id @default(cuid())
  externalJobRef String   @unique
  title          String
  description    String?
  isActive       Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  jobs           Job[]
}

model Job {
  jobId          String      @id @default(cuid())
  externalJobRef String      @unique
  roleId         String?
  jdDocId        String?
  status         String      @default("PENDING")
  modelVersion   String      @default("v1")
  createdAt      DateTime    @default(now())
  role           Role?       @relation(fields: [roleId], references: [roleId])
  jobResumes     JobResume[]
  scores         Score[]
}

model JobResume {
  jobId       String
  resumeDocId String
  resume      Document @relation(fields: [resumeDocId], references: [docId], onDelete: Cascade)
  job         Job      @relation(fields: [jobId], references: [jobId], onDelete: Cascade)

  @@id([jobId, resumeDocId])
}

model Score {
  scoreId      String   @id @default(cuid())
  jobId        String
  resumeDocId  String
  modelVersion String   @default("v1")
  finalScore   Float
  reasonsJson  String
  createdAt    DateTime @default(now())
  job          Job      @relation(fields: [jobId], references: [jobId], onDelete: Cascade)

  @@unique([jobId, resumeDocId, modelVersion])
}
